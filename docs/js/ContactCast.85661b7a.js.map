{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./src/views/ContactCast.vue?17a7","webpack:///src/views/ContactCast.vue","webpack:///./src/views/ContactCast.vue?9a85","webpack:///./src/views/ContactCast.vue"],"names":["DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","this","match","error","render","_vm","_h","$createElement","_c","_self","staticClass","_v","roll","attrs","logs","_l","paginated","log","index","key","accountId","imgurl","_s","name","nameLimit","category","class","active","isInstagramActive","isTwitterActive","isYouTubeActive","isTikTokActive","email","tell","_e","on","$event","openModal","userId","complete","directives","rawName","value","expression","CompleteOpenModal","clientData","client","myAccountId","myUid","closeModal","stopEvent","helfwidth","clientName","castName","message","clientmessage","position","coment","domProps","target","composing","inputMessage","saveMessage","transactionComplete","staticRenderFns","components","Header","SideBar","data","localStorage","doc","clientUid","campaignId","castId","castUid","messages","paginate","showModal","alertModal","isHidden","created","$route","params","query","uid","allFunction","methods","text","substr","maxLength","console","campaignsDb","collection","then","accountDb","where","messageDb","e","stopPropagation","messageData","push","messageDoc","set","response","update","campaignDb","completeTime","Date","forEach","num","payment","Number","nowPayment","price","component"],"mappings":"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","file":"js/ContactCast.85661b7a.js","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Header'),_c('div',{staticClass:\"container\"},[_c('SideBar'),_c('main',[_c('section',{staticClass:\"contact-cast-section\"},[_c('h2',[_vm._v(\"コンタクト\")]),_c('div',{staticClass:\"contact-box\"},[(_vm.roll !== 'cast')?_c('section',{staticClass:\"contact-cast\"},[_c('paginate',{staticClass:\"paginate\",attrs:{\"name\":\"paginate-log\",\"list\":_vm.logs,\"per\":10,\"tag\":\"div\"}},_vm._l((_vm.paginated('paginate-log')),function(log,index){return _c('article',{key:index,staticClass:\"cast-box\"},[_c('router-link',{staticClass:\"cast-link-box\",attrs:{\"to\":'/cast/detail/' + log.accountId + '/1',\"tag\":\"div\"}},[_c('div',{staticClass:\"img-box\"},[(log.imgurl)?_c('img',{attrs:{\"src\":log.imgurl,\"alt\":\"キャストの画像\"}}):_c('img',{attrs:{\"src\":require(\"../assets/image/no_image.png\"),\"alt\":\"キャストの画像\"}})]),_c('div',{staticClass:\"cast-info\"},[_c('div',{staticClass:\"cast-name-info\"},[_c('p',{staticClass:\"cast-name\"},[_vm._v(_vm._s(log.name ? _vm.nameLimit(log.name) : _vm.nameLimit('未設定')))])]),_c('div',{staticClass:\"category\"},_vm._l((log.category),function(category,index){return _c('p',{key:index,staticClass:\"cast-category\"},[_vm._v(_vm._s(category ? category : '未設定'))])}),0),_c('div',{staticClass:\"sns-icon\"},[_c('span',{class:{ active: _vm.isInstagramActive }},[_c('i',{staticClass:\"fab fa-instagram\"})]),_c('span',{class:{ active: _vm.isTwitterActive }},[_c('i',{staticClass:\"fab fa-twitter active\"})]),_c('span',{class:{ active: _vm.isYouTubeActive }},[_c('i',{staticClass:\"fab fa-youtube\"})]),_c('span',{class:{ active: _vm.isTikTokActive }},[_c('i',{staticClass:\"fab fa-tiktok\"})])]),(_vm.roll === 'admin')?_c('div',{staticClass:\"inquiry\"},[_c('p',{staticClass:\"email\"},[_vm._v(_vm._s(log.email ? log.email : '未設定'))]),_c('p',{staticClass:\"tell\"},[_vm._v(_vm._s(log.tell ? log.tell : '未設定'))])]):_vm._e()])]),_c('div',{staticClass:\"message-btn\"},[_c('div',{on:{\"click\":function($event){return _vm.openModal(log.accountId, log.userId)}}},[_vm._v(\"チャット\")]),(_vm.roll === 'client' && !log.complete)?_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isHidden),expression:\"isHidden\"}],on:{\"click\":function($event){return _vm.CompleteOpenModal(log.userId)}}},[_vm._v(\"取引完了\")]):_vm._e()])],1)}),0),_c('paginate-links',{attrs:{\"for\":\"paginate-log\",\"limit\":3,\"show-step-links\":true,\"classes\":{\n                'ul': 'pagination',\n                'li': 'pagination-list',\n                'li > a': 'pagination-link'\n              }}})],1):_vm._e(),(_vm.roll === 'cast')?_c('article',{staticClass:\"client-box\"},[_c('router-link',{staticClass:\"client-link-box\",attrs:{\"to\":'/client/detail/' + _vm.clientData.accountId,\"tag\":\"div\"}},[_c('div',{staticClass:\"img-box\"},[(_vm.clientData.imgurl)?_c('img',{attrs:{\"src\":_vm.clientData.imgurl,\"alt\":\"クライアントの画像\"}}):_c('img',{attrs:{\"src\":require(\"../assets/image/no_image.png\"),\"alt\":\"クライアントの画像\"}})]),_c('div',{staticClass:\"client-info\"},[_c('div',{staticClass:\"client-name-info\"},[_c('p',{staticClass:\"client-name\"},[_vm._v(_vm._s(_vm.clientData.client ? _vm.nameLimit(_vm.clientData.client) : _vm.nameLimit('未設定')))])]),_c('div',{staticClass:\"category\"},_vm._l((_vm.clientData.category),function(category,index){return _c('p',{key:index,staticClass:\"client-category\"},[_vm._v(_vm._s(category ? category : '未設定'))])}),0),_c('div',{staticClass:\"inquiry\"},[_c('p',{staticClass:\"email\"},[_vm._v(_vm._s(_vm.clientData.email ? _vm.clientData.email : '未設定'))]),_c('p',{staticClass:\"tell\"},[_vm._v(_vm._s(_vm.clientData.tell ? _vm.clientData.tell : '未設定'))])])])]),_c('div',{staticClass:\"message-btn\"},[_c('div',{on:{\"click\":function($event){return _vm.openModal(_vm.clientData.myAccountId, _vm.clientData.myUid)}}},[_vm._v(\"チャット\")])])],1):_vm._e(),_c('section',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showModal),expression:\"showModal\"}],staticClass:\"overlay-box\",on:{\"click\":_vm.closeModal}},[_c('div',{staticClass:\"message-box\",on:{\"click\":_vm.stopEvent}},[_c('div',{class:[{helfwidth: _vm.roll ==='admin'}, 'name']},[(_vm.roll !== 'client')?_c('div',[_c('p',[_vm._v(_vm._s(_vm.clientName ? _vm.clientName : '未設定'))])]):_vm._e(),(_vm.roll !== 'cast')?_c('div',[_c('p',[_vm._v(_vm._s(_vm.castName ? _vm.castName : '未設定'))])]):_vm._e()]),_c('div',{staticClass:\"message\"},[(_vm.roll === 'cast' || _vm.roll === 'admin')?_c('div',_vm._l((_vm.messages),function(message,index){return _c('div',{key:index,class:[{ clientmessage: !message.position }, 'castmessage']},[_c('p',[_vm._v(_vm._s(message.coment))])])}),0):_vm._e(),(_vm.roll === 'client')?_c('div',_vm._l((_vm.messages),function(message,index){return _c('div',{key:index,class:[{ clientmessage: message.position }, 'castmessage']},[_c('p',[_vm._v(_vm._s(message.coment))])])}),0):_vm._e()]),(_vm.roll !== 'admin' && _vm.complete)?_c('div',{staticClass:\"input-box\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputMessage),expression:\"inputMessage\"}],attrs:{\"rows\":\"2\"},domProps:{\"value\":(_vm.inputMessage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.inputMessage=$event.target.value}}}),_c('i',{staticClass:\"fas fa-share\",on:{\"click\":_vm.saveMessage}})]):_vm._e()])]),_c('section',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.alertModal),expression:\"alertModal\"}],staticClass:\"overlay-box\",on:{\"click\":_vm.closeModal}},[_c('div',{staticClass:\"alert-box\",on:{\"click\":_vm.stopEvent}},[_c('p',[_vm._v(\"取引を完了してもいいですか？\")]),_c('small',[_vm._v(\"※これ以上の連絡はできなくなります\")]),_c('br'),_c('small',[_vm._v(\"※キャストへの報酬が発生します\")]),_c('div',{staticClass:\"btn-box\"},[_c('div',{on:{\"click\":_vm.closeModal}},[_vm._v(\"キャンセル\")]),_c('div',{on:{\"click\":_vm.transactionComplete}},[_vm._v(\"取引完了\")])])])])])])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <Header/>\n    <div class=\"container\">\n      <SideBar/>\n      <main>\n        <section class=\"contact-cast-section\">\n          <h2>コンタクト</h2>\n          <div class=\"contact-box\">\n            <!--------------- 管理者、クライアントのみ表示のキャスト情報 --------------->\n\n            <section class=\"contact-cast\" v-if=\"roll !== 'cast'\">\n              <paginate class=\"paginate\" name=\"paginate-log\" :list=\"logs\" :per=\"10\" tag=\"div\">\n                <article class=\"cast-box\" v-for=\"(log, index) in paginated('paginate-log')\" :key=\"index\">\n                  <router-link :to=\"'/cast/detail/' + log.accountId + '/1'\" tag=\"div\" class=\"cast-link-box\">\n                    <div class=\"img-box\">\n                      <img v-if=\"log.imgurl\" :src=\"log.imgurl\" alt=\"キャストの画像\">\n                      <img v-else src=\"../assets/image/no_image.png\" alt=\"キャストの画像\">\n                    </div>\n                    <div class=\"cast-info\">\n                      <div class=\"cast-name-info\">\n                        <p class=\"cast-name\">{{ log.name ? nameLimit(log.name) : nameLimit('未設定') }}</p>\n                      </div>\n                      <div class=\"category\">\n                        <p class=\"cast-category\" v-for=\"(category, index) in log.category\" :key=\"index\">{{ category ? category : '未設定' }}</p>\n                      </div>\n                      <div class=\"sns-icon\">\n                        <span :class=\"{ active: isInstagramActive }\"><i class=\"fab fa-instagram\"></i></span>\n                        <span :class=\"{ active: isTwitterActive }\"><i class=\"fab fa-twitter active\"></i></span>\n                        <span :class=\"{ active: isYouTubeActive }\"><i class=\"fab fa-youtube\"></i></span>\n                        <span :class=\"{ active: isTikTokActive }\"><i class=\"fab fa-tiktok\"></i></span>\n                      </div>\n                      <div v-if=\"roll === 'admin'\" class=\"inquiry\">\n                        <p class=\"email\">{{ log.email ? log.email : '未設定' }}</p>\n                        <p class=\"tell\">{{ log.tell ? log.tell : '未設定' }}</p>\n                      </div>\n                    </div>\n                  </router-link>\n                  <div class=\"message-btn\">\n                    <div @click=\"openModal(log.accountId, log.userId)\">チャット</div>\n                    <div v-if=\"roll === 'client' && !log.complete\" v-show=\"isHidden\" @click=\"CompleteOpenModal(log.userId)\">取引完了</div>\n                  </div>\n                </article>\n              </paginate>\n              <paginate-links for=\"paginate-log\" :limit=\"3\" :show-step-links=\"true\"\n                :classes=\"{\n                  'ul': 'pagination',\n                  'li': 'pagination-list',\n                  'li > a': 'pagination-link'\n                }\" \n              ></paginate-links>\n            </section>\n\n\n            <!------------------- キャストのみ表示のクライアント情報 ------------------->\n\n            <article v-if=\"roll === 'cast'\" class=\"client-box\">\n              <router-link :to=\"'/client/detail/' + clientData.accountId\" tag=\"div\" class=\"client-link-box\">\n                <div class=\"img-box\">\n                  <img v-if=\"clientData.imgurl\" :src=\"clientData.imgurl\" alt=\"クライアントの画像\">\n                  <img v-else src=\"../assets/image/no_image.png\" alt=\"クライアントの画像\">\n                </div>\n                <div class=\"client-info\">\n                  <div class=\"client-name-info\">\n                    <p class=\"client-name\">{{ clientData.client ? nameLimit(clientData.client) : nameLimit('未設定') }}</p>\n                  </div>\n                  <div class=\"category\">\n                    <p class=\"client-category\" v-for=\"(category, index) in clientData.category\" :key=\"index\">{{ category ? category : '未設定' }}</p>\n                  </div>\n                  <div class=\"inquiry\">\n                    <p class=\"email\">{{ clientData.email ? clientData.email : '未設定' }}</p>\n                    <p class=\"tell\">{{ clientData.tell ? clientData.tell : '未設定' }}</p>\n                  </div>\n                </div>\n              </router-link>\n              <div class=\"message-btn\">\n                <div @click=\"openModal(clientData.myAccountId, clientData.myUid)\">チャット</div>\n              </div>\n            </article>\n\n            <!------------------- チャットボタンを押した際のモーダル ------------------->\n\n            <section class=\"overlay-box\" v-show=\"showModal\" @click=\"closeModal\">\n              <div class=\"message-box\" @click=\"stopEvent\">\n                <div :class=\"[{helfwidth: roll ==='admin'}, 'name']\">\n                  <div v-if=\"roll !== 'client'\">\n                    <p>{{ clientName ? clientName : '未設定' }}</p>\n                  </div>\n                  <div v-if=\"roll !== 'cast'\">\n                    <p>{{ castName ? castName : '未設定' }}</p>\n                  </div>\n                </div>\n\n                <!----- クライアントとキャストでチャットの吹き出しを入れ替えている ----->\n                <div class=\"message\">\n                  <div v-if=\"roll === 'cast' || roll === 'admin'\">\n                    <div v-for=\"(message, index) in messages\" :key=\"index\" :class=\"[{ clientmessage: !message.position }, 'castmessage']\">\n                      <p>{{ message.coment }}</p>\n                    </div>\n                  </div>\n                  <div v-if=\"roll === 'client'\">\n                    <div v-for=\"(message, index) in messages\" :key=\"index\" :class=\"[{ clientmessage: message.position }, 'castmessage']\">\n                      <p>{{ message.coment }}</p>\n                    </div>\n                  </div>\n                </div>\n                <!---------------------------------------------------------------------->\n\n                <div class=\"input-box\" v-if=\"roll !== 'admin' && complete\">\n                  <textarea rows=\"2\" v-model=\"inputMessage\"></textarea>\n                  <i @click=\"saveMessage\" class=\"fas fa-share\"></i>\n                </div>\n              </div>\n            </section>\n\n            <!------------------- 取引完了ボタンを押した際のモーダル ------------------->\n\n            <section class=\"overlay-box\" v-show=\"alertModal\" @click=\"closeModal\">\n              <div class=\"alert-box\" @click=\"stopEvent\">\n                <p>取引を完了してもいいですか？</p>\n                <small>※これ以上の連絡はできなくなります</small><br>\n                <small>※キャストへの報酬が発生します</small>\n                <div class=\"btn-box\">\n                  <div @click=\"closeModal\">キャンセル</div>\n                  <div @click=\"transactionComplete\">取引完了</div>\n                </div>\n              </div>\n            </section>\n\n          </div>\n        </section>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from '../components/Header.vue';\nimport SideBar from '../components/SideBar.vue';\nimport firebase from '@/plugins/firebase';\n\nexport default {\n  components: {\n    Header,\n    SideBar\n  },\n  data() {\n    return {\n      roll: localStorage.roll,\n      doc: \"\",\n      clientUid: \"\",\n      campaignId: \"\",\n      castId: \"\",\n      castUid: \"\",\n      clientName: \"\",\n      castName: \"\",\n      inputMessage: \"\",\n      clientData: {},\n      messages: [],\n      logs: [],\n      paginate: ['paginate-log'],\n      showModal: false,\n      alertModal: false,\n      complete: true,\n      isHidden: true,\n      isInstagramActive: false,\n      isTwitterActive: false,\n      isYouTubeActive: false,\n      isTikTokActive: false,\n    }\n  },\n  created() {\n    this.campaignId = this.$route.params['id'];\n    this.clientUid = this.$route.query.uid\n    const accountDb = firebase.firestore().collection('account')\n    const campaignDb = firebase.firestore().collection('campaigns')\n    const uid = firebase.auth().currentUser.uid\n\n    // キャストの際にクライアントを表示させる処理===============================\n\n    // <共通>選択したキャンペーンのドキュメント名を取得\n    const getCampaignDoc = async () => {\n      const campaignDoc = await campaignDb.where('campaignid', '==', this.campaignId).get();\n      this.doc = campaignDoc.docs[0].id;\n    }\n\n    // () <キャスト>選択したキャンペーンの出稿クライアントのデータを取得\n    const getClientAccountData = async () => {\n      const accountData = [];\n      const myAccount = await accountDb.where('userId', '==', uid).get();\n      const clientAccount = await accountDb.where('userId', '==', this.clientUid).get();\n      const myAccountData = myAccount.docs[0].data();\n      const clientAccountData = clientAccount.docs[0].data();\n      accountData.push({\n        myData: myAccountData,\n        clientData: clientAccountData\n      })\n      return accountData;\n    }\n    // (3) <キャスト>imgpathがあればimgurlを取得し、なければそのまま格納する処理\n    const dataPush = async (accountData) => {\n      const myData = accountData[0].myData;\n      const clientData = accountData[0].clientData;\n      if(clientData.imgpath !== \"\") {\n        const imgpath = clientData.imgpath;\n        await firebase.storage().ref().child(imgpath).getDownloadURL().then(response => {\n          clientData.imgurl = response;\n          clientData.myAccountId = myData.accountId;\n          clientData.myUid = uid;\n          this.clientData = clientData;\n        })\n      } else {\n        clientData.myAccountId = myData.accountId;\n        clientData.myUid = uid;\n        this.clientData = clientData;\n      }\n    }\n\n    // (2) <クライアント>取引中のキャスト応募データを取得\n    const getTransactionCast = async () => {\n      const transactionCastsArray = [];\n      const transactionCasts = await campaignDb.doc(this.doc).collection('applys').where('status', '==', true).get();\n      this.campaignId = transactionCasts.docs[0].data().campaignId\n      transactionCasts.forEach(transactionCast => {\n        transactionCastsArray.push(transactionCast.data())\n      })\n      return transactionCastsArray;\n    }\n\n    // (3) <クライアント>取引中のキャスト応募データからアカウント情報を取得\n    const getTransactionCastAccount = async (transactionCastsArray) => {\n      const transactionCastAccountArray = [];\n      for(let i = 0; i < transactionCastsArray.length; i++) {\n        const transactionCastAccount = await accountDb.where('userId', '==', transactionCastsArray[i].uid).get();\n        const data = transactionCastAccount.docs[0].data();\n        data.complete = transactionCastsArray.complete;\n        transactionCastAccountArray.push(data);\n      }\n      return transactionCastAccountArray;\n    }\n\n    // (4) imgpathがあればimgurlを取得し、なければそのまま格納する処理\n    const castDataPush = async (transactionCastAccountArray) => {\n      for(let i = 0; i < transactionCastAccountArray.length; i++) {\n        snsActiveCheck(transactionCastAccountArray[i])\n        if(transactionCastAccountArray[i].imgpath !== \"\") {\n          const imgpath = transactionCastAccountArray[i].imgpath;\n          const imgurl = await firebase.storage().ref().child(imgpath).getDownloadURL();\n          transactionCastAccountArray[i].imgurl = imgurl;\n          this.logs.push(transactionCastAccountArray[i]);\n        } else {\n          this.logs.push(transactionCastAccountArray[i]);\n        }\n      }\n    }\n    \n    // キャストのsns活動チェック\n    const snsActiveCheck = (data) => {\n      if(\n          data.myInstagram.accountId !== \"\" || data.myInstagram.accountName !== \"\" ||\n          data.myInstagram.accountType !== \"\" || data.myInstagram.followerCount !== \"\" ||\n          data.myInstagram.goodAverage !== \"\" || data.myInstagram.engagement !== \"\"\n        ) this.isInstagramActive = true;\n\n        if(\n          data.myTwitter.accountId !== \"\" || data.myTwitter.accountName !== \"\" ||\n          data.myTwitter.accountType !== \"\" || data.myTwitter.followerCount !== \"\" ||\n          data.myTwitter.goodAverage !== \"\" || data.myTwitter.engagement !== \"\"\n        ) this.isTwitterActive = true;\n\n        if(\n          data.myYouTube.accountId !== \"\" || data.myYouTube.accountName !== \"\" ||\n          data.myYouTube.accountType !== \"\" || data.myYouTube.followerCount !== \"\" ||\n          data.myYouTube.goodAverage !== \"\" || data.myYouTube.engagement !== \"\"\n        ) this.isYouTubeActive = true;\n\n        if(\n          data.myTikTok.accountId !== \"\" || data.myTikTok.accountName !== \"\" ||\n          data.myTikTok.accountType !== \"\" || data.myTikTok.followerCount !== \"\" ||\n          data.myTikTok.goodAverage !== \"\" || data.myTikTok.engagement !== \"\"\n        ) this.isTikTokActive = true;\n    }\n\n    // (1) 全ての関数を実行\n    const allFunction = async () => {\n      await getCampaignDoc()\n      if(this.roll === 'cast') {\n        const accountData = await getClientAccountData()\n        await dataPush(accountData)\n      } else {\n        const transactionCastsArray = await getTransactionCast()\n        const transactionCastAccountArray = await getTransactionCastAccount(transactionCastsArray)\n        await castDataPush(transactionCastAccountArray)\n      }\n    }\n\n    allFunction()\n\n  },\n  methods: {\n    nameLimit(text) {\n      const maxLength = 18;\n      if(text.length > maxLength) {\n        return text.substr(0, maxLength) + '...';\n      }\n      return text;\n    },\n    openModal(castId, castUid) {\n      this.castId = castId\n      console.log(castId)\n      console.log(castUid)\n      this.showModal = true\n      const accountDb = firebase.firestore().collection('account')\n      const campaignsDb = firebase.firestore().collection('campaigns')\n      const messageDb = firebase.firestore().collection('message')\n      console.log(this.doc)\n      campaignsDb.doc(this.doc).collection('applys').doc(castUid).get().then(response => {\n        if(response.data().complete === true) {\n          this.complete = false\n        }\n      })\n      accountDb.where('accountId', '==', this.castId).get().then(response => { // キャストの名前を取得\n        this.castName = response.docs[0].data().name\n      })\n      accountDb.where('userId', '==', this.clientUid).get().then(response => { // クライアントの名前を取得\n        this.clientName = response.docs[0].data().client\n      })\n      messageDb.doc(this.campaignId + this.castId).get()\n      .then(response => { this.messages = response.data().message })\n    },\n    CompleteOpenModal(castUid) {\n      this.castUid = castUid\n      this.alertModal = true\n    },\n    closeModal() {\n      this.showModal = false\n      this.alertModal = false\n    },\n    stopEvent(e) {\n      e.stopPropagation()\n    },\n    saveMessage() {\n      const messageDb = firebase.firestore().collection('message')\n      const messageDoc = this.campaignId + this.castId\n      let messageData = []\n      if(this.messages.length === 0) {\n        if(this.roll === \"client\") {\n          messageData.push({ campaignId: this.campaignId, coment: this.inputMessage, position: true, date: new Date() })\n        } else if(this.roll === \"cast\") {\n          messageData.push({ campaignId: this.campaignId, coment: this.inputMessage, position: false, date: new Date() })\n        }\n        messageDb.doc(messageDoc).set({ message: messageData }).then(() => {\n          this.inputMessage = \"\"\n          this.messages = messageData\n        })\n      } else {\n        messageDb.doc(messageDoc).get().then(response => { \n          messageData = response.data().message\n          if(this.roll === \"client\") {\n            messageData.push({ campaignId: this.campaignId, coment: this.inputMessage, position: true, date: new Date() })\n          } else if(this.roll === \"cast\") {\n            messageData.push({ campaignId: this.campaignId, coment: this.inputMessage, position: false, date: new Date() })\n          }\n          messageDb.doc(messageDoc).update({ message: messageData }).then(() => {\n            this.inputMessage = \"\"\n            this.messages = messageData\n          })\n        })\n      }\n    },\n    transactionComplete() {\n      const campaignDb = firebase.firestore().collection('campaigns')\n      campaignDb.doc(this.doc).collection('applys').doc(this.castUid).update({\n        complete: true,\n        completeTime: new Date()\n      }).then(() => {\n        this.isHidden = false\n        campaignDb.doc(this.doc).collection('applys')\n        .where('status', '==', true).get().then(response => {\n          if(response.size > 0) {\n            let num = 0\n            response.forEach(apply => {\n              if(apply.data().complete === true) {\n                num += 1\n              }\n            })\n            if(this.logs.length === num) {\n              campaignDb.doc(this.doc).update({ complete: true, completeDate: new Date() })\n            }\n          }\n        })\n      })\n      campaignDb.where('campaignid', '==', this.campaignId).get().then(response => {\n        const data = response.docs[0].data()\n        const nowPayment = data.payment\n        campaignDb.doc(this.doc).update({\n          payment: Number(nowPayment) + Number(data.price)\n        }).then(() => {\n          this.closeModal()\n        })\n      })\n    }\n  }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactCast.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactCast.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ContactCast.vue?vue&type=template&id=85c6d316&\"\nimport script from \"./ContactCast.vue?vue&type=script&lang=js&\"\nexport * from \"./ContactCast.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}